{"mappings":"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","sources":["src/solver.ts","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-b51530f6b26c46b2.js","node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js","node_modules/@parcel/runtime-js/lib/runtime-5eb9030c9bd66c63.js","src/theme.ts","src/index.ts"],"sourcesContent":["import type { SolveParams, Solution, Stats, WorkerRequest, WorkerResponse, SuggestParams, Suggestion } from \"./worker\";\n\nlet onSolutionCallback: (solution: Solution, updatedIndex: number) => void;\nexport function setOnSolutions(onSolution: (solution: Solution, updatedIndex: number) => void) {\n    onSolutionCallback = onSolution;\n}\n\nlet onSuggestionCallback: (suggestion: Suggestion) => void;\nexport function setOnSuggestion(onSuggestion: (suggestion: Suggestion) => void) {\n    onSuggestionCallback = onSuggestion;\n}\n\ntype WorkerState = {\n    initialized: false,\n    runningSolve: false,\n    runningSuggest: false,\n    worker: null,\n} | {\n    initialized: true,\n    runningSolve: boolean,\n    runningSuggest: boolean,\n    worker: Worker,\n};\n\nlet workerState: WorkerState = {\n    initialized: false,\n    runningSolve: false,\n    runningSuggest: false,\n    worker: null,\n};\n\nfunction createInitializedWorker(): Promise<Worker> {\n    let worker = new Worker(new URL('worker.ts', import.meta.url), { type: \"module\" });\n    let initMessage: WorkerRequest = { eventType: \"INITIALIZE\" };\n\n    return new Promise((resolve, reject) => {\n        worker.onerror = reject;\n        worker.onmessageerror = reject;\n        worker.onmessage = (message: MessageEvent<WorkerResponse>) => {\n            if (message.data.eventType == \"INITIALIZED\") {\n                worker.onmessage = function () { };\n                resolve(worker);\n            }\n        };\n        worker.postMessage(initMessage);\n    });\n}\nlet loadWorker = () => createInitializedWorker().then(worker => {\n    worker.addEventListener(\"error\", (e) => onError(new Error(e.message)));\n    worker.addEventListener(\"message\", workerHandler);\n    workerState = {\n        initialized: true,\n        runningSolve: false,\n        runningSuggest: false,\n        worker,\n    };\n});\n\nlet onFinishSolve = (stats: Stats) => { };\nlet onFinishSuggest = () => { };\nlet onError: (error: Error) => void = (e) => { };\n\nfunction workerHandler(message: MessageEvent<WorkerResponse>) {\n    if (message.data.eventType == \"INITIALIZED\") {\n        throw new Error(\"double initialization\");\n    } else if (message.data.eventType == \"EMIT\") {\n        onSolutionCallback(message.data.solution, message.data.updatedIndex);\n    } else if (message.data.eventType == \"EMIT_SUGGESTION\") {\n        onSuggestionCallback(message.data.suggestion);\n    } else if (message.data.eventType == \"ERROR\") {\n        onError(message.data.error);\n    } else if (message.data.eventType == \"FINISH\") {\n        console.timeEnd(\"solve\");\n        workerState.runningSolve = false;\n        onFinishSolve(message.data.stats);\n    } else if (message.data.eventType == \"FINISH_SUGGESTION\") {\n        console.timeEnd(\"suggest\");\n        workerState.runningSuggest = false;\n        onFinishSuggest();\n    } else {\n        let _: never = message.data;\n    }\n}\n\nloadWorker();\n\nexport function solve(params: SolveParams): Promise<Stats | undefined> {\n    if (!workerState.initialized) {\n        console.warn(\"attempted to solve before initialization\");\n        return Promise.resolve(undefined);\n    }\n\n    if (workerState.runningSolve || workerState.runningSuggest) {\n        console.warn(\"terminating worker for new request\");\n        console.timeEnd(\"solve\");\n        workerState.worker.terminate();\n        return loadWorker().then(() => {\n            return solve(params);\n        });\n    }\n\n    console.time(\"solve\");\n    workerState.runningSolve = true;\n    let message: WorkerRequest = {\n        eventType: \"CALL\",\n        params,\n    };\n    workerState.worker.postMessage(message);\n\n    return new Promise((resolve, reject) => {\n        onFinishSolve = resolve;\n        onError = reject;\n    });\n}\n\nexport function suggest(params: SuggestParams): Promise<void> {\n    if (!workerState.initialized) {\n        console.warn(\"attempted to solve before initialization\");\n        return Promise.resolve(undefined);\n    }\n\n    if (workerState.runningSolve || workerState.runningSuggest) {\n        console.warn(\"terminating worker for new request\");\n        console.timeEnd(\"suggest\");\n        workerState.worker.terminate();\n        return loadWorker().then(() => {\n            return suggest(params);\n        });\n    }\n\n    console.time(\"suggest\");\n    workerState.runningSuggest = true;\n    let message: WorkerRequest = {\n        eventType: \"SUGGEST\",\n        params,\n    };\n    workerState.worker.postMessage(message);\n\n    return new Promise((resolve, reject) => {\n        onFinishSuggest = resolve;\n        onError = reject;\n    });\n}\n","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"1Gxa9\\\":\\\"index.57eba216.js\\\",\\\"eiVB1\\\":\\\"worker.a45f3902.js\\\"}\"));","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};","let workerURL = require('./helpers/get-worker-url');\nlet url = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"eiVB1\"));\nmodule.exports = workerURL(url.toString(), url.origin, true);","let themeToggleButton = document.getElementById(\"themeToggleButton\")!;\nlet prefersDarkScheme = window.matchMedia(\"(prefers-color-scheme: dark)\");\n\nlet localStorageKeyTheme = \"theme\";\n\nlet darkThemeClass = \"dark-theme\";\nlet lightThemeClass = \"light-theme\";\n\nlet currentTheme = localStorage.getItem(localStorageKeyTheme);\nif (currentTheme == \"dark\") {\n    document.body.classList.toggle(darkThemeClass);\n} else if (currentTheme == \"light\") {\n    document.body.classList.toggle(lightThemeClass);\n} else {\n    currentTheme = prefersDarkScheme.matches ? \"dark\" : \"light\";\n}\n\nthemeToggleButton.textContent = `Theme: ${currentTheme}`;\n\nthemeToggleButton.addEventListener(\"click\", () => {\n    let theme: string;\n    if (prefersDarkScheme.matches) {\n        document.body.classList.toggle(lightThemeClass);\n        theme = document.body.classList.contains(lightThemeClass) ? \"light\" : \"dark\";\n    } else {\n        document.body.classList.toggle(darkThemeClass);\n        theme = document.body.classList.contains(darkThemeClass) ? \"dark\" : \"light\";\n    }\n    localStorage.setItem(localStorageKeyTheme, theme);\n    themeToggleButton.textContent = `Theme: ${theme}`;\n});","import { solve, setOnSolutions, suggest, setOnSuggestion } from \"./solver\";\nimport type { Solution, Suggestion } from \"./worker\";\nimport \"./theme\";\n\nlet solveBtn = document.getElementById(\"solveBtn\")!;\nlet solveOutputList = document.getElementById(\"solveOutputList\")!;\nlet solveLoadingIndicator = document.getElementById(\"solveLoadingIndicator\")!;\nlet suggestBtn = document.getElementById(\"suggestBtn\")! as HTMLButtonElement;\nlet suggestOutputList = document.getElementById(\"suggestOutputList\")!;\nlet suggestLoadingIndicator = document.getElementById(\"suggestLoadingIndicator\")!;\nlet errorMessage = document.getElementById(\"errorMessage\")!;\nlet statsMessage = document.getElementById(\"statsMessage\")!;\nlet settingsForm = document.getElementById(\"settings\")!;\n\nlet inputTimeTable = document.getElementById(\"timeTable\") as HTMLTextAreaElement;\nlet inputNSolutions = document.getElementById(\"nSolutions\") as HTMLInputElement;\nlet inputMaxRestarts = document.getElementById(\"maxRestarts\") as HTMLInputElement;\nlet inputOnlyRequiredRestarts = document.getElementById(\"onlyRequiredRestarts\") as HTMLInputElement;\nlet inputRestartPenalty = document.getElementById(\"restartPenalty\") as HTMLInputElement;\nlet inputSuggestThreshold = document.getElementById(\"suggestFrameThreshold\") as HTMLInputElement;\n\nsuggestBtn.disabled = true;\n\nlet bestSolution: number | undefined = undefined;\n\ninputTimeTable.addEventListener(\"keypress\", (e) => {\n    if (e.key === \"Enter\" && e.ctrlKey) {\n        e.preventDefault();\n        solveBtn.click();\n    }\n});\n\n\nlet setSolverSpinning = (active: boolean) => solveLoadingIndicator.classList.toggle(\"disabled\", !active);\nlet setSuggestSpinning = (active: boolean) => suggestLoadingIndicator.classList.toggle(\"disabled\", !active);\n\nfunction createRouteElement(route: number[]): HTMLElement {\n    let routeEl = document.createElement(\"code\");\n\n    let routeElements = route.flatMap<Element | string>((number, index) => {\n        if (index == 0) return [];\n\n        let elements: (Element | string)[] = [];\n\n        let pad = false;\n\n        if (number === 0) {\n            let restart = document.createElement(\"span\");\n            restart.textContent = \"[R] \";\n            restart.className = \"restart\";\n            elements.push(restart);\n        } else {\n            let num = number.toString();\n            elements.push(pad ? num.padEnd(3) : (num + \" \"));\n            length = num.length;\n        }\n\n        return elements;\n    });\n    routeEl.replaceChildren(...routeElements);\n    return routeEl;\n}\n\nfunction createSolutionLi(solution: Solution): HTMLLIElement {\n    let timeEl = document.createElement(\"span\");\n    timeEl.className = \"time\";\n    timeEl.textContent = `${formatDuration(solution.time * 17, true)} (${solution.time}): `;\n\n    let routeEl = createRouteElement(solution.route);\n\n    let li = document.createElement(\"li\");\n    li.className = \"newSolution\";\n    li.replaceChildren(timeEl, \" \", routeEl);\n\n    return li;\n}\n\nfunction truncateChildren(element: Element, length: number) {\n    while (element.childElementCount > length) {\n        element.removeChild(element.lastChild!);\n    }\n}\n\nfunction insertChildAt(parent: Element, child: Element, index: number) {\n    if (index >= parent.childElementCount) {\n        parent.appendChild(child);\n    } else {\n        solveOutputList.insertBefore(child, parent.children[index]);\n    }\n}\n\nfunction createSuggestionLi(suggestion: Suggestion): HTMLLIElement {\n    if (bestSolution === undefined) {\n        throw new Error(\"attempted to suggest new drafts without solving first\");\n    }\n\n    let frameDifference = bestSolution - suggestion.time;\n\n    let nodeEl = document.createElement(\"span\");\n    nodeEl.textContent = `${suggestion.start}-${suggestion.end}`;\n    nodeEl.className = \"suggestConnection\";\n\n    let timeEl = document.createElement(\"span\");\n    timeEl.className = \"time\";\n    timeEl.textContent = `[${frameDifference}f]`;\n\n    let routeEl = createRouteElement(suggestion.route);\n\n    let li = document.createElement(\"li\");\n    li.className = \"newSolution\";\n    li.replaceChildren(nodeEl, \" \", timeEl, \" \", routeEl);\n\n    return li;\n}\n\n\n\nsetOnSolutions((solution, updatedIndex) => {\n    let nSolutions = Number(inputNSolutions.value);\n\n    if (bestSolution === undefined || solution.time < bestSolution) {\n        bestSolution = solution.time;\n    }\n\n    let li = createSolutionLi(solution);\n    insertChildAt(solveOutputList, li, updatedIndex);\n    truncateChildren(solveOutputList, nSolutions);\n});\n\nsetOnSuggestion((suggestion) => {\n    let li = createSuggestionLi(suggestion);\n    suggestOutputList.appendChild(li);\n});\n\nfunction formatDuration(millis: number, alwaysIncludeMinutes?: boolean) {\n    let ms = millis % 1000;\n    millis = (millis - ms) / 1000;\n    let secs = millis % 60;\n    millis = (millis - secs) / 60;\n    let mins = millis % 60;\n    let hrs = (millis - mins) / 60;\n\n    let str = `${secs.toString().padStart(2, \"0\")}.${ms.toString().padStart(3, \"0\")}`;\n    if (alwaysIncludeMinutes || mins != 0) {\n        str = `${mins.toString().padStart(2, \"0\")}:${str}`;\n    }\n    if (hrs != 0) {\n        str = `${hrs.toString().padStart(2, \"0\")}:${str}`;\n    }\n\n    return str;\n}\n\nsolveBtn.addEventListener(\"click\", () => {\n    setSolverSpinning(true);\n    setSuggestSpinning(false);\n    suggestBtn.disabled = true;\n    bestSolution = undefined;\n\n    solveOutputList.replaceChildren();\n    suggestOutputList.replaceChildren();\n    statsMessage.textContent = \"\";\n    errorMessage.textContent = \"\";\n\n    let table = inputTimeTable.value;\n    let maxSolutions = Number(inputNSolutions.value);\n    let maxRestarts = inputMaxRestarts.value !== \"\" ? Number(inputMaxRestarts.value) : undefined;\n    let onlyRequiredRestarts = inputOnlyRequiredRestarts.checked;\n    // let restartPenalty = Number(inputRestartPenalty.value);\n    let restartPenalty = 190;\n\n    let start = Date.now();\n    solve({\n        table,\n        maxSolutions,\n        maxRestarts,\n        onlyRequiredRestarts,\n        restartPenalty,\n    })\n        .then(stats => {\n            let end = Date.now();\n\n            if (stats) {\n                let msg = `${stats.solutions} solutions found, ${stats.iterations} calls to pathfind function and ${stats.cutBranches} cut branches, in ${formatDuration(end - start, true)} `;\n                statsMessage.textContent = msg;\n            } else {\n                statsMessage.textContent = \"Code not fully loaded yet, try again later\";\n            }\n            suggestBtn.disabled = false;\n        })\n        .catch((error: Error) => {\n            errorMessage.textContent = `Error: ${error.message}`;\n            console.error(error);\n        })\n        .finally(() => {\n            setSolverSpinning(false);\n        });\n});\n\nsuggestBtn.addEventListener(\"click\", () => {\n    if (bestSolution === undefined) {\n        throw new Error(\"attempted to suggest new drafts without solving first\");\n    }\n\n    setSuggestSpinning(true);\n\n    suggestOutputList.replaceChildren();\n\n    let table = inputTimeTable.value;\n    let maxRestarts = inputMaxRestarts.value !== \"\" ? Number(inputMaxRestarts.value) : undefined;\n    let onlyRequiredRestarts = inputOnlyRequiredRestarts.checked;\n    // let restartPenalty = Number(inputRestartPenalty.value);\n    let restartPenalty = 190;\n\n    let frameThreshold = Number(inputSuggestThreshold.value);\n    let timeToBeat = bestSolution - frameThreshold;\n\n    suggest({\n        table, maxRestarts, onlyRequiredRestarts, restartPenalty, timeToBeat\n    })\n        .catch((error: Error) => {\n            errorMessage.textContent = `Error: ${error.message}`;\n            console.error(error);\n        })\n        .finally(() => {\n            setSuggestSpinning(false);\n        });\n});"],"names":["$4d92f81ca86817c4$var$onSolutionCallback","$4d92f81ca86817c4$var$onSuggestionCallback","$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$4d92f81ca86817c4$var$workerState","initialized","runningSolve","runningSuggest","worker","$56b621a6dd25b2cb$exports","workerUrl","origin","isESM","self","location","source","stringify","URL","createObjectURL","Blob","type","$dbc446bb83a6385a$var$url","resolve","url","$dbc446bb83a6385a$exports","toString","$4d92f81ca86817c4$var$loadWorker","Worker","initMessage","eventType","Promise","reject","onerror","onmessageerror","onmessage","message","data","postMessage","$4d92f81ca86817c4$var$createInitializedWorker","then","addEventListener","e","$4d92f81ca86817c4$var$onError","$4d92f81ca86817c4$var$workerHandler","$4d92f81ca86817c4$var$onFinishSolve","stats","$4d92f81ca86817c4$var$onFinishSuggest","solution","updatedIndex","suggestion","error","console","timeEnd","$4d92f81ca86817c4$export$2865df1f26e73f8e","params","warn","undefined","terminate","time","$4d92f81ca86817c4$export$b0b3f4ef5d856594","$227f11a6809b1d6b$var$themeToggleButton","document","getElementById","$227f11a6809b1d6b$var$prefersDarkScheme","window","matchMedia","$227f11a6809b1d6b$var$localStorageKeyTheme","$227f11a6809b1d6b$var$darkThemeClass","$227f11a6809b1d6b$var$lightThemeClass","$227f11a6809b1d6b$var$currentTheme","localStorage","getItem","body","classList","toggle","matches","textContent","theme","contains","setItem","$b4e14b6b8da86996$var$bestSolution","$b4e14b6b8da86996$var$solveBtn","$b4e14b6b8da86996$var$solveOutputList","$b4e14b6b8da86996$var$solveLoadingIndicator","$b4e14b6b8da86996$var$suggestBtn","$b4e14b6b8da86996$var$suggestOutputList","$b4e14b6b8da86996$var$suggestLoadingIndicator","$b4e14b6b8da86996$var$errorMessage","$b4e14b6b8da86996$var$statsMessage","$b4e14b6b8da86996$var$inputTimeTable","$b4e14b6b8da86996$var$inputNSolutions","$b4e14b6b8da86996$var$inputMaxRestarts","$b4e14b6b8da86996$var$inputOnlyRequiredRestarts","$b4e14b6b8da86996$var$inputSuggestThreshold","disabled","key","ctrlKey","preventDefault","click","$b4e14b6b8da86996$var$setSolverSpinning","active","$b4e14b6b8da86996$var$setSuggestSpinning","$b4e14b6b8da86996$var$createRouteElement","route","routeEl","createElement","routeElements","flatMap","number","index","elements","restart","className","push","num","replaceChildren","$b4e14b6b8da86996$var$formatDuration","millis","alwaysIncludeMinutes","ms","secs","mins","hrs","str","padStart","nSolutions","Number","value","li","timeEl","$b4e14b6b8da86996$var$createSolutionLi","parent","child","childElementCount","appendChild","insertBefore","children","element","length1","removeChild","lastChild","$b4e14b6b8da86996$var$truncateChildren","frameDifference","nodeEl","start","end","$b4e14b6b8da86996$var$createSuggestionLi","table","maxSolutions","maxRestarts","onlyRequiredRestarts","checked","Date","now","msg","solutions","iterations","cutBranches","catch","finally","frameThreshold"],"version":3,"file":"index.57eba216.js.map"}